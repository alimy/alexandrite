// Code generated by go-mir. DO NOT EDIT.

package v1

import (
	"net/http"

	"github.com/alimy/mir/v2"
	"github.com/gorilla/mux"
)

// just use for mir.Any method to register
var httpMethods = mir.HttpMethods

type Registry interface {
	Register(http.ResponseWriter, *http.Request)
	Login(http.ResponseWriter, *http.Request)
	TokensInfo(http.ResponseWriter, *http.Request)
	GenerateTokens(http.ResponseWriter, *http.Request)
	RevokeTokens(http.ResponseWriter, *http.Request)
	TokenByName(http.ResponseWriter, *http.Request)
	Categories(http.ResponseWriter, *http.Request)
	SearchCrates(http.ResponseWriter, *http.Request)
	PublishCrates(http.ResponseWriter, *http.Request)
	SuggestCrates(http.ResponseWriter, *http.Request)
	CrateInfo(http.ResponseWriter, *http.Request)
	CrateOwnersInfo(http.ResponseWriter, *http.Request)
	PutCrateOwners(http.ResponseWriter, *http.Request)
	DelCrateOwners(http.ResponseWriter, *http.Request)
	YankCrate(http.ResponseWriter, *http.Request)
	UnyankCrate(http.ResponseWriter, *http.Request)
	DownloadCrate(http.ResponseWriter, *http.Request)
}

// RegisterRegistryServant register Registry servant to mux
func RegisterRegistryServant(r *mux.Router, s Registry) {
	router := r.PathPrefix("/api/v1").Subrouter()

	// register routes info to router
	router.HandleFunc("account/register", s.Register).
		Methods("POST")
	router.HandleFunc("account/login", s.Login).
		Methods("POST")
	router.HandleFunc("account/tokens", s.TokensInfo).
		Methods("POST")
	router.HandleFunc("account/tokens", s.GenerateTokens).
		Methods("PUT")
	router.HandleFunc("account/tokens", s.RevokeTokens).
		Methods("DELETE")
	router.HandleFunc("account/tokens/{name}", s.TokenByName).
		Methods("GET")
	router.HandleFunc("categories", s.Categories).
		Methods("GET")
	router.HandleFunc("crates", s.SearchCrates).
		Methods("GET")
	router.HandleFunc("crates/new", s.PublishCrates).
		Methods("PUT")
	router.HandleFunc("crates/suggest", s.SuggestCrates).
		Methods("GET")
	router.HandleFunc("crates/{name}", s.CrateInfo).
		Methods("GET")
	router.HandleFunc("crates/{name}/owners", s.CrateOwnersInfo).
		Methods("GET")
	router.HandleFunc("crates/{name}/owners", s.PutCrateOwners).
		Methods("PUT")
	router.HandleFunc("crates/{name}/owners", s.DelCrateOwners).
		Methods("DELETE")
	router.HandleFunc("crates/{name}/{version}/yank", s.YankCrate).
		Methods("DELETE")
	router.HandleFunc("crates/{name}/{version}/unyank", s.UnyankCrate).
		Methods("PUT")
	router.HandleFunc("crates/{name}/{version}/download", s.DownloadCrate).
		Methods("GET")
}
